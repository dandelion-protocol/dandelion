use dandelion_wire::UUID;

// root UUID: cf70f818-5b44-11ef-9e36-2cf05dade767
// ROOT_UUID.sha1("envelope"): d1b7d87a-567e-5553-a118-fcc7a2c6a1ce
// ROOT_UUID.sha1("messages"): 829c1fcd-89de-5737-9eb4-8ed9d70bf6c8
// ROOT_UUID.sha1("attestation"): ce158e1f-8b3c-533a-a69b-26b9374f9f83
// ROOT_UUID.sha1("block"): c217ee93-3d40-5c24-8b98-7b212bb15d2c

pub const ENVELOPE_TYPE: UUID = UUID([
    0xd1, 0xb7, 0xd8, 0x7a, 0x56, 0x7e, 0x55, 0x53, 0xa1, 0x18, 0xfc, 0xc7, 0xa2, 0xc6, 0xa1, 0xce,
]);

pub const MESSAGES_TYPE: UUID = UUID([
    0x82, 0x9c, 0x1f, 0xcd, 0x89, 0xde, 0x57, 0x37, 0x9e, 0xb4, 0x8e, 0xd9, 0xd7, 0x0b, 0xf6, 0xc8,
]);

pub const ATTESTATION_TYPE: UUID = UUID([
    0xce, 0x15, 0x8e, 0x1f, 0x8b, 0x3c, 0x53, 0x3a, 0xa6, 0x9b, 0x26, 0xb9, 0x37, 0x4f, 0x9f, 0x83,
]);

pub const BLOCK_TYPE: UUID = UUID([
    0xc2, 0x17, 0xee, 0x93, 0x3d, 0x40, 0x5c, 0x24, 0x8b, 0x98, 0x7b, 0x21, 0x2b, 0xb1, 0x5d, 0x2c,
]);
